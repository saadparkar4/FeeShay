// models/UserProfile.ts
export interface JobPost {
  id: string
  title: string
  status: 'Active' | 'Completed' | 'In Progress'
  description: string
  dateLabel: string
  buttonLabel?: string
}

export interface Review {
  id: string
  name: string
  date: string
  comment: string
  rating: number
}

export interface UserProfile {
  id: string
  name: string
  role: string
  bio: string
  location: string
  languages: { label: string; level: string }[]
  memberSince: string
  jobPosts: JobPost[]
  reviews: Review[]
  averageRating: number
  reviewCount: number
  profileImageUrl: string
}

// lib/api.ts
import axios from 'axios'
import { UserProfile } from '../models/UserProfile'

export const fetchUserProfile = async (): Promise<UserProfile> => {
  const response = await axios.get<UserProfile>('https://your-api.com/api/profile')
  return response.data
}

// hooks/useUserProfile.ts
import { useQuery } from '@tanstack/react-query'
import { fetchUserProfile } from '../lib/api'

export const useUserProfile = () => {
  return useQuery({
    queryKey: ['userProfile'],
    queryFn: fetchUserProfile,
  })
}

// components/ProfileHeader.tsx
import React from 'react'
import { View, Text, Image, Pressable } from 'react-native'
import { Ionicons } from '@expo/vector-icons'
import { UserProfile } from '../models/UserProfile'

interface Props {
  user: UserProfile
}

const ProfileHeader: React.FC<Props> = ({ user }) => {
  return (
    <View style={{ alignItems: 'center', marginBottom: 24 }}>
      <Image
        source={{ uri: user.profileImageUrl }}
        style={{ width: 100, height: 100, borderRadius: 50 }}
      />
      <Pressable
        style={{ position: 'absolute', bottom: 0, right: 120, backgroundColor: '#fff', borderRadius: 12, padding: 4 }}
      >
        <Ionicons name="camera" size={16} color="#333" />
      </Pressable>
      <Text style={{ fontWeight: 'bold', fontSize: 20, marginTop: 12 }}>{user.name}</Text>
      <Text style={{ color: 'gray', marginBottom: 6 }}>{user.role}</Text>
      <Text style={{ textAlign: 'center', color: '#555', paddingHorizontal: 16 }}>{user.bio}</Text>
    </View>
  )
}

export default ProfileHeader

// components/PersonalDetails.tsx
import React from 'react'
import { View, Text } from 'react-native'
import { Ionicons } from '@expo/vector-icons'
import { UserProfile } from '../models/UserProfile'

interface Props {
  user: UserProfile
}

const PersonalDetails: React.FC<Props> = ({ user }) => {
  return (
    <View style={{ marginBottom: 24 }}>
      <Text style={{ fontWeight: 'bold', fontSize: 16, marginBottom: 8 }}>Personal Details</Text>
      <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 4 }}>
        <Ionicons name="location" size={16} color="purple" />
        <Text style={{ marginLeft: 6 }}>{user.location}</Text>
      </View>
      <Text style={{ marginTop: 8, marginBottom: 4, fontWeight: '600' }}>Languages</Text>
      <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>
        {user.languages.map((lang, index) => (
          <Text
            key={index}
            style={{ backgroundColor: '#f2f2f2', paddingHorizontal: 8, paddingVertical: 4, borderRadius: 8, marginRight: 6, marginBottom: 6 }}
          >
            {lang.label} ({lang.level})
          </Text>
        ))}
      </View>
      <View style={{ flexDirection: 'row', alignItems: 'center', marginTop: 10 }}>
        <Ionicons name="calendar" size={16} color="purple" />
        <Text style={{ marginLeft: 6 }}>Client since {user.memberSince}</Text>
      </View>
    </View>
  )
}

export default PersonalDetails

// components/JobPostList.tsx
import React from 'react'
import { View, Text, Pressable } from 'react-native'
import { JobPost } from '../models/UserProfile'

interface Props {
  jobs: JobPost[]
}

const JobPostList: React.FC<Props> = ({ jobs }) => {
  return (
    <View style={{ marginBottom: 24 }}>
      <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginBottom: 12 }}>
        <Text style={{ fontWeight: 'bold', fontSize: 16 }}>My Job Posts</Text>
        <Text style={{ color: 'blue' }}>View All</Text>
      </View>

      {jobs.map((job) => (
        <View
          key={job.id}
          style={{ backgroundColor: '#f9f9f9', padding: 12, borderRadius: 12, marginBottom: 12 }}
        >
          <Text style={{ fontWeight: 'bold' }}>{job.title}</Text>
          <Text style={{ color: 'gray', marginBottom: 6 }}>{job.description}</Text>
          <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>
            <Text style={statusTag(job.status)}>{job.status}</Text>
            <Text style={{ color: '#888' }}>{job.dateLabel}</Text>
          </View>
        </View>
      ))}
    </View>
  )
}

const statusTag = (status: string) => ({
  backgroundColor:
    status === 'Active' ? '#d1f7c4' : status === 'Completed' ? '#e0e0e0' : '#fce3aa',
  color: '#000',
  paddingHorizontal: 8,
  borderRadius: 8,
  fontSize: 12,
})

export default JobPostList

// components/ReviewList.tsx
import React from 'react'
import { View, Text } from 'react-native'
import { Ionicons } from '@expo/vector-icons'
import { Review } from '../models/UserProfile'

interface Props {
  reviews: Review[]
  averageRating: number
  reviewCount: number
}

const ReviewList: React.FC<Props> = ({ reviews, averageRating, reviewCount }) => {
  return (
    <View style={{ marginBottom: 24 }}>
      <Text style={{ fontWeight: 'bold', fontSize: 16, marginBottom: 8 }}>Ratings & Reviews</Text>
      <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 8 }}>
        <Text style={{ fontSize: 20, fontWeight: 'bold' }}>{averageRating.toFixed(1)}</Text>
        <Ionicons name="star" color="gold" size={20} style={{ marginLeft: 4 }} />
        <Text style={{ marginLeft: 6, color: 'gray' }}>Based on {reviewCount} reviews</Text>
      </View>
      {reviews.map((r) => (
        <View key={r.id} style={{ marginBottom: 12 }}>
          <Text style={{ fontWeight: '600' }}>{r.name}</Text>
          <Text style={{ color: 'gray', marginBottom: 4 }}>{r.date}</Text>
          <Text style={{ fontSize: 14, lineHeight: 20 }}>{r.comment}</Text>
        </View>
      ))}
      <Text style={{ color: 'blue', marginTop: 8 }}>See All Reviews</Text>
    </View>
  )
}

export default ReviewList

// components/ProfileSettings.tsx
import React from 'react'
import { View, Text, Switch, Pressable } from 'react-native'
import { Ionicons } from '@expo/vector-icons'

const ProfileSettings = () => {
  return (
    <View style={{ marginBottom: 32 }}>
      <Text style={{ fontWeight: 'bold', fontSize: 16, marginBottom: 12 }}>Settings</Text>

      <View style={settingRow}>
        <Ionicons name="notifications" size={20} color="deeppink" />
        <Text style={settingLabel}>Notifications</Text>
        <Switch value={true} style={{ marginLeft: 'auto' }} />
      </View>

      <View style={settingRow}>
        <Ionicons name="language" size={20} color="purple" />
        <Text style={settingLabel}>Language</Text>
        <Text style={{ marginLeft: 'auto' }}>English</Text>
      </View>

      <Pressable style={settingRow}>
        <Ionicons name="log-out-outline" size={20} color="crimson" />
        <Text style={[settingLabel, { color: 'crimson' }]}>Logout</Text>
      </Pressable>
    </View>
  )
}

const settingRow = {
  flexDirection: 'row',
  alignItems: 'center',
  marginBottom: 16,
}

const settingLabel = {
  marginLeft: 12,
  fontSize: 14,
}

export default ProfileSettings

// screens/ProfileScreen.tsx
import React from 'react'
import { ScrollView, Text, ActivityIndicator } from 'react-native'
import { SafeAreaView } from 'react-native-safe-area-context'
import ProfileHeader from '../components/ProfileHeader'
import PersonalDetails from '../components/PersonalDetails'
import JobPostList from '../components/JobPostList'
import ReviewList from '../components/ReviewList'
import ProfileSettings from '../components/ProfileSettings'
import { useUserProfile } from '../hooks/useUserProfile'

const ProfileScreen = () => {
  const { data: user, isLoading, error } = useUserProfile()

  if (isLoading) {
    return (
      <SafeAreaView style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>
        <ActivityIndicator size="large" />
      </SafeAreaView>
    )
  }

  if (error || !user) {
    return (
      <SafeAreaView style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>
        <Text>Error loading profile.</Text>
      </SafeAreaView>
    )
  }

  return (
    <SafeAreaView style={{ flex: 1 }}>
      <ScrollView contentContainerStyle={{ padding: 16 }}>
        <ProfileHeader user={user} />
        <PersonalDetails user={user} />
        <JobPostList jobs={user.jobPosts} />
        <ReviewList
          reviews={user.reviews}
          averageRating={user.averageRating}
          reviewCount={user.reviewCount}
        />
        <ProfileSettings />
      </ScrollView>
    </SafeAreaView>
  )
}

export default ProfileScreen
